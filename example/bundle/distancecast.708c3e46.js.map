{"mappings":"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","sources":["node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.cross( this.eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detatch from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\tupdate() {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t}\n\n}\n\nTransformControls.prototype.isTransformControls = true;\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_TRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true;\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"names":["$0edd725fdeca00ba$var$_raycaster","$hGT0Q","Raycaster","$0edd725fdeca00ba$var$_tempVector","Vector3","$0edd725fdeca00ba$var$_tempVector2","$0edd725fdeca00ba$var$_tempQuaternion","Quaternion","$0edd725fdeca00ba$var$_unit","X","Y","Z","$0edd725fdeca00ba$var$_changeEvent","type","$0edd725fdeca00ba$var$_mouseDownEvent","$0edd725fdeca00ba$var$_mouseUpEvent","mode","$0edd725fdeca00ba$var$_objectChangeEvent","$0edd725fdeca00ba$export$198e80c116632110","Object3D","camera","domElement","super","undefined","console","warn","document","this","visible","style","touchAction","_gizmo","$0edd725fdeca00ba$export$c2ae06a69fb9d31f","add","_plane","$0edd725fdeca00ba$export$c0ab73045548e2ca","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","$0edd725fdeca00ba$var$getPointer","bind","_onPointerDown","$0edd725fdeca00ba$var$onPointerDown","_onPointerHover","$0edd725fdeca00ba$var$onPointerHover","_onPointerMove","$0edd725fdeca00ba$var$onPointerMove","_onPointerUp","$0edd725fdeca00ba$var$onPointerUp","addEventListener","updateMatrixWorld","object","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","pointerHover","pointer","dragging","setFromCamera","intersect","$0edd725fdeca00ba$var$intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","position","quaternion","scale","point","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAngle","angleTo","cross","rotationSnap","setFromAxisAngle","pointerUp","dispose","removeEventListener","traverse","child","geometry","material","attach","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","prototype","isTransformControls","$0edd725fdeca00ba$var$_tempEuler","Euler","$0edd725fdeca00ba$var$_alignVector","$0edd725fdeca00ba$var$_zeroVector","$0edd725fdeca00ba$var$_lookAtMatrix","Matrix4","$0edd725fdeca00ba$var$_tempQuaternion2","$0edd725fdeca00ba$var$_identityQuaternion","$0edd725fdeca00ba$var$_dirVector","$0edd725fdeca00ba$var$_tempMatrix","$0edd725fdeca00ba$var$_unitX","$0edd725fdeca00ba$var$_unitY","$0edd725fdeca00ba$var$_unitZ","$0edd725fdeca00ba$var$_v1","$0edd725fdeca00ba$var$_v2","$0edd725fdeca00ba$var$_v3","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","LineBasicMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matGray","arrowGeometry","CylinderGeometry","translate","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","lineGeometry2","CircleGeometry","radius","arc","TorusGeometry","PI","rotateY","rotateX","gizmoTranslate","Mesh","XYZ","OctahedronGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","Line","TranslateHelperGeometry","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","SphereGeometry","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","setFromEuler","isTransformControlsGizmo","PlaneGeometry","wireframe","side","DoubleSide","isTransformControlsPlane"],"version":3,"file":"distancecast.708c3e46.js.map"}