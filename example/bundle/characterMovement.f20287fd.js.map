{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/characterMovement.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import * as THREE from 'three';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport * as BufferGeometryUtils from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport Stats from 'stats.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { MeshBVH, MeshBVHVisualizer } from '..';\n\nconst params = {\n\n\tfirstPerson: false,\n\n\tdisplayCollider: false,\n\tdisplayBVH: false,\n\tvisualizeDepth: 10,\n\tgravity: - 30,\n\tplayerSpeed: 10,\n\tphysicsSteps: 5,\n\n\treset: reset,\n\n};\n\nlet renderer, camera, scene, clock, gui, stats;\nlet environment, collider, visualizer, player, controls;\nlet playerIsOnGround = false;\nlet fwdPressed = false, bkdPressed = false, lftPressed = false, rgtPressed = false;\nlet playerVelocity = new THREE.Vector3();\nlet upVector = new THREE.Vector3( 0, 1, 0 );\nlet tempVector = new THREE.Vector3();\nlet tempVector2 = new THREE.Vector3();\nlet tempBox = new THREE.Box3();\nlet tempMat = new THREE.Matrix4();\nlet tempSegment = new THREE.Line3();\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( bgColor, 20, 70 );\n\n\t// lights\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 1, 1.5, 1 ).multiplyScalar( 50 );\n\tlight.shadow.mapSize.setScalar( 2048 );\n\tlight.shadow.bias = - 1e-4;\n\tlight.shadow.normalBias = 0.05;\n\tlight.castShadow = true;\n\n\tconst shadowCam = light.shadow.camera;\n\tshadowCam.bottom = shadowCam.left = - 30;\n\tshadowCam.top = 30;\n\tshadowCam.right = 45;\n\n\tscene.add( light );\n\tscene.add( new THREE.HemisphereLight( 0xffffff, 0x223344, 0.4 ) );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 10, 10, - 10 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\twindow.camera = camera;\n\n\tclock = new THREE.Clock();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tloadColliderEnvironment();\n\n\t// character\n\tplayer = new THREE.Mesh(\n\t\tnew RoundedBoxGeometry( 1.0, 2.0, 1.0, 10, 0.5 ),\n\t\tnew THREE.MeshStandardMaterial()\n\t);\n\tplayer.geometry.translate( 0, - 0.5, 0 );\n\tplayer.capsuleInfo = {\n\t\tradius: 0.5,\n\t\tsegment: new THREE.Line3( new THREE.Vector3(), new THREE.Vector3( 0, - 1.0, 0.0 ) )\n\t};\n\tplayer.castShadow = true;\n\tplayer.receiveShadow = true;\n\tplayer.material.shadowSide = 2;\n\tscene.add( player );\n\treset();\n\n\t// dat.gui\n\tgui = new GUI();\n\tgui.add( params, 'firstPerson' ).onChange( v => {\n\n\t\tif ( ! v ) {\n\n\t\t\tcamera\n\t\t\t\t.position\n\t\t\t\t.sub( controls.target )\n\t\t\t\t.normalize()\n\t\t\t\t.multiplyScalar( 10 )\n\t\t\t\t.add( controls.target );\n\n\t\t}\n\n\t} );\n\n\tconst visFolder = gui.addFolder( 'Visualization' );\n\tvisFolder.add( params, 'displayCollider' );\n\tvisFolder.add( params, 'displayBVH' );\n\tvisFolder.add( params, 'visualizeDepth', 1, 20, 1 ).onChange( v => {\n\n\t\tvisualizer.depth = v;\n\t\tvisualizer.update();\n\n\t} );\n\tvisFolder.open();\n\n\tconst physicsFolder = gui.addFolder( 'Player' );\n\tphysicsFolder.add( params, 'physicsSteps', 0, 30, 1 );\n\tphysicsFolder.add( params, 'gravity', - 100, 100, 0.01 ).onChange( v => {\n\n\t\tparams.gravity = parseFloat( v );\n\n\t} );\n\tphysicsFolder.add( params, 'playerSpeed', 1, 20 );\n\tphysicsFolder.open();\n\n\tgui.add( params, 'reset' );\n\tgui.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW': fwdPressed = true; break;\n\t\t\tcase 'KeyS': bkdPressed = true; break;\n\t\t\tcase 'KeyD': rgtPressed = true; break;\n\t\t\tcase 'KeyA': lftPressed = true; break;\n\t\t\tcase 'Space':\n\t\t\t\tif ( playerIsOnGround ) {\n\n\t\t\t\t\tplayerVelocity.y = 10.0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t} );\n\n\twindow.addEventListener( 'keyup', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW': fwdPressed = false; break;\n\t\t\tcase 'KeyS': bkdPressed = false; break;\n\t\t\tcase 'KeyD': rgtPressed = false; break;\n\t\t\tcase 'KeyA': lftPressed = false; break;\n\n\t\t}\n\n\t} );\n\n}\n\nfunction loadColliderEnvironment() {\n\n\tnew GLTFLoader().load( '../models/dungeon_low_poly_game_level_challenge/scene.gltf', res => {\n\n\t\tconst gltfScene = res.scene;\n\t\tgltfScene.scale.setScalar( .01 );\n\n\t\tconst box = new THREE.Box3();\n\t\tbox.setFromObject( gltfScene );\n\t\tbox.getCenter( gltfScene.position ).negate();\n\t\tgltfScene.updateMatrixWorld( true );\n\n\t\t// visual geometry setup\n\t\tconst toMerge = {};\n\t\tgltfScene.traverse( c => {\n\n\t\t\tif (\n\t\t\t\t/Boss/.test( c.name ) ||\n\t\t\t\t/Enemie/.test( c.name ) ||\n\t\t\t\t/Shield/.test( c.name ) ||\n\t\t\t\t/Sword/.test( c.name ) ||\n\t\t\t\t/Character/.test( c.name ) ||\n\t\t\t\t/Gate/.test( c.name ) ||\n\n\t\t\t\t// spears\n\t\t\t\t/Cube/.test( c.name ) ||\n\n\t\t\t\t// pink brick\n\t\t\t\tc.material && c.material.color.r === 1.0\n\t\t\t) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( c.isMesh ) {\n\n\t\t\t\tconst hex = c.material.color.getHex();\n\t\t\t\ttoMerge[ hex ] = toMerge[ hex ] || [];\n\t\t\t\ttoMerge[ hex ].push( c );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tenvironment = new THREE.Group();\n\t\tfor ( const hex in toMerge ) {\n\n\t\t\tconst arr = toMerge[ hex ];\n\t\t\tconst visualGeometries = [];\n\t\t\tarr.forEach( mesh => {\n\n\t\t\t\tif ( mesh.material.emissive.r !== 0 ) {\n\n\t\t\t\t\tenvironment.attach( mesh );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst geom = mesh.geometry.clone();\n\t\t\t\t\tgeom.applyMatrix4( mesh.matrixWorld );\n\t\t\t\t\tvisualGeometries.push( geom );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( visualGeometries.length ) {\n\n\t\t\t\tconst newGeom = BufferGeometryUtils.mergeBufferGeometries( visualGeometries );\n\t\t\t\tconst newMesh = new THREE.Mesh( newGeom, new THREE.MeshStandardMaterial( { color: parseInt( hex ), shadowSide: 2 } ) );\n\t\t\t\tnewMesh.castShadow = true;\n\t\t\t\tnewMesh.receiveShadow = true;\n\t\t\t\tnewMesh.material.shadowSide = 2;\n\n\t\t\t\tenvironment.add( newMesh );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// collect all geometries to merge\n\t\tconst geometries = [];\n\t\tenvironment.updateMatrixWorld( true );\n\t\tenvironment.traverse( c => {\n\n\t\t\tif ( c.geometry ) {\n\n\t\t\t\tconst cloned = c.geometry.clone();\n\t\t\t\tcloned.applyMatrix4( c.matrixWorld );\n\t\t\t\tfor ( const key in cloned.attributes ) {\n\n\t\t\t\t\tif ( key !== 'position' ) {\n\n\t\t\t\t\t\tcloned.deleteAttribute( key );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.push( cloned );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// create the merged geometry\n\t\tconst mergedGeometry = BufferGeometryUtils.mergeBufferGeometries( geometries, false );\n\t\tmergedGeometry.boundsTree = new MeshBVH( mergedGeometry, { lazyGeneration: false } );\n\n\t\tcollider = new THREE.Mesh( mergedGeometry );\n\t\tcollider.material.wireframe = true;\n\t\tcollider.material.opacity = 0.5;\n\t\tcollider.material.transparent = true;\n\n\t\tvisualizer = new MeshBVHVisualizer( collider, params.visualizeDepth );\n\t\tscene.add( visualizer );\n\t\tscene.add( collider );\n\t\tscene.add( environment );\n\n\t} );\n\n}\n\nfunction reset() {\n\n\tplayerVelocity.set( 0, 0, 0 );\n\tplayer.position.set( 15.75, - 3, 30 );\n\tcamera.position.sub( controls.target );\n\tcontrols.target.copy( player.position );\n\tcamera.position.add( player.position );\n\tcontrols.update();\n\n}\n\nfunction updatePlayer( delta ) {\n\n\tplayerVelocity.y += playerIsOnGround ? 0 : delta * params.gravity;\n\tplayer.position.addScaledVector( playerVelocity, delta );\n\n\t// move the player\n\tconst angle = controls.getAzimuthalAngle();\n\tif ( fwdPressed ) {\n\n\t\ttempVector.set( 0, 0, - 1 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( bkdPressed ) {\n\n\t\ttempVector.set( 0, 0, 1 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( lftPressed ) {\n\n\t\ttempVector.set( - 1, 0, 0 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( rgtPressed ) {\n\n\t\ttempVector.set( 1, 0, 0 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tplayer.updateMatrixWorld();\n\n\t// adjust player position based on collisions\n\tconst capsuleInfo = player.capsuleInfo;\n\ttempBox.makeEmpty();\n\ttempMat.copy( collider.matrixWorld ).invert();\n\ttempSegment.copy( capsuleInfo.segment );\n\n\t// get the position of the capsule in the local space of the collider\n\ttempSegment.start.applyMatrix4( player.matrixWorld ).applyMatrix4( tempMat );\n\ttempSegment.end.applyMatrix4( player.matrixWorld ).applyMatrix4( tempMat );\n\n\t// get the axis aligned bounding box of the capsule\n\ttempBox.expandByPoint( tempSegment.start );\n\ttempBox.expandByPoint( tempSegment.end );\n\n\ttempBox.min.addScalar( - capsuleInfo.radius );\n\ttempBox.max.addScalar( capsuleInfo.radius );\n\n\tcollider.geometry.boundsTree.shapecast( {\n\n\t\tintersectsBounds: box => box.intersectsBox( tempBox ),\n\n\t\tintersectsTriangle: tri => {\n\n\t\t\t// check if the triangle is intersecting the capsule and adjust the\n\t\t\t// capsule position if it is.\n\t\t\tconst triPoint = tempVector;\n\t\t\tconst capsulePoint = tempVector2;\n\n\t\t\tconst distance = tri.closestPointToSegment( tempSegment, triPoint, capsulePoint );\n\t\t\tif ( distance < capsuleInfo.radius ) {\n\n\t\t\t\tconst depth = capsuleInfo.radius - distance;\n\t\t\t\tconst direction = capsulePoint.sub( triPoint ).normalize();\n\n\t\t\t\ttempSegment.start.addScaledVector( direction, depth );\n\t\t\t\ttempSegment.end.addScaledVector( direction, depth );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// get the adjusted position of the capsule collider in world space after checking\n\t// triangle collisions and moving it. capsuleInfo.segment.start is assumed to be\n\t// the origin of the player model.\n\tconst newPosition = tempVector;\n\tnewPosition.copy( tempSegment.start ).applyMatrix4( collider.matrixWorld );\n\n\t// check how much the collider was moved\n\tconst deltaVector = tempVector2;\n\tdeltaVector.subVectors( newPosition, player.position );\n\n\t// if the player was primarily adjusted vertically we assume it's on something we should consider ground\n\tplayerIsOnGround = deltaVector.y > Math.abs( delta * playerVelocity.y * 0.25 );\n\n\tconst offset = Math.max( 0.0, deltaVector.length() - 1e-5 );\n\tdeltaVector.normalize().multiplyScalar( offset );\n\n\t// adjust the player model\n\tplayer.position.add( deltaVector );\n\n\tif ( ! playerIsOnGround ) {\n\n\t\tdeltaVector.normalize();\n\t\tplayerVelocity.addScaledVector( deltaVector, - deltaVector.dot( playerVelocity ) );\n\n\t} else {\n\n\t\tplayerVelocity.set( 0, 0, 0 );\n\n\t}\n\n\t// adjust the camera\n\tcamera.position.sub( controls.target );\n\tcontrols.target.copy( player.position );\n\tcamera.position.add( player.position );\n\n\t// if the player has fallen too far below the level reset their position to the start\n\tif ( player.position.y < - 25 ) {\n\n\t\treset();\n\n\t}\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tconst delta = Math.min( clock.getDelta(), 0.1 );\n\tif ( params.firstPerson ) {\n\n\t\tcontrols.maxPolarAngle = Math.PI;\n\t\tcontrols.minDistance = 1e-4;\n\t\tcontrols.maxDistance = 1e-4;\n\n\t} else {\n\n\t\tcontrols.maxPolarAngle = Math.PI / 2;\n\t\tcontrols.minDistance = 1;\n\t\tcontrols.maxDistance = 20;\n\n\t}\n\n\tif ( collider ) {\n\n\t\tcollider.visible = params.displayCollider;\n\t\tvisualizer.visible = params.displayBVH;\n\n\t\tconst physicsSteps = params.physicsSteps;\n\n\t\tfor ( let i = 0; i < physicsSteps; i ++ ) {\n\n\t\t\tupdatePlayer( delta / physicsSteps );\n\n\t\t}\n\n\t}\n\n\t// TODO: limit the camera movement based on the collider\n\t// raycast in direction of camera and move it if it's further than the closest point\n\n\tcontrols.update();\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$1f23d87e64a7a672$var$params","firstPerson","displayCollider","displayBVH","visualizeDepth","gravity","playerSpeed","physicsSteps","reset","$1f23d87e64a7a672$var$reset","$1f23d87e64a7a672$var$renderer","$1f23d87e64a7a672$var$camera","$1f23d87e64a7a672$var$scene","$1f23d87e64a7a672$var$clock","$1f23d87e64a7a672$var$gui","$1f23d87e64a7a672$var$stats","$1f23d87e64a7a672$var$environment","$1f23d87e64a7a672$var$collider","$1f23d87e64a7a672$var$visualizer","$1f23d87e64a7a672$var$player","$1f23d87e64a7a672$var$controls","$1f23d87e64a7a672$var$playerIsOnGround","$1f23d87e64a7a672$var$fwdPressed","$1f23d87e64a7a672$var$bkdPressed","$1f23d87e64a7a672$var$lftPressed","$1f23d87e64a7a672$var$rgtPressed","$1f23d87e64a7a672$var$playerVelocity","$hGT0Q","Vector3","$1f23d87e64a7a672$var$upVector","$1f23d87e64a7a672$var$tempVector","$1f23d87e64a7a672$var$tempVector2","$1f23d87e64a7a672$var$tempBox","Box3","$1f23d87e64a7a672$var$tempMat","Matrix4","$1f23d87e64a7a672$var$tempSegment","Line3","set","position","sub","target","copy","add","$1f23d87e64a7a672$var$updatePlayer","delta","y","addScaledVector","angle","getAzimuthalAngle","applyAxisAngle","updateMatrixWorld","capsuleInfo","makeEmpty","matrixWorld","invert","segment","start","applyMatrix4","expandByPoint","addScalar","radius","geometry","boundsTree","shapecast","intersectsBounds","box","intersectsBox","intersectsTriangle","tri","triPoint","capsulePoint","distance","closestPointToSegment","depth","direction","normalize","newPosition","deltaVector","subVectors","abs","offset","multiplyScalar","dot","bgColor","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","outputEncoding","sRGBEncoding","body","Scene","fog","Fog","light","DirectionalLight","shadow","mapSize","setScalar","bias","normalBias","castShadow","shadowCam","camera","bottom","left","top","right","HemisphereLight","PerspectiveCamera","far","updateProjectionMatrix","Clock","$W2bOH","OrbitControls","$parcel$interopDefault","$4EHgc","GLTFLoader","load","res","gltfScene","scene","scale","setFromObject","getCenter","negate","toMerge","traverse","test","name","material","color","isMesh","hex","getHex","push","Group","arr","visualGeometries","forEach","mesh","emissive","attach","geom","clone","newGeom","$7N5zk","mergeBufferGeometries","newMesh","Mesh","MeshStandardMaterial","parseInt","shadowSide","receiveShadow","geometries","cloned","key","attributes","deleteAttribute","mergedGeometry","$aBPXg","MeshBVH","lazyGeneration","wireframe","opacity","transparent","MeshBVHVisualizer","$c0yzz","RoundedBoxGeometry","translate","$ghLil","GUI","onChange","visFolder","addFolder","open","physicsFolder","parseFloat","aspect","code","$1f23d87e64a7a672$var$init","$1f23d87e64a7a672$var$render","requestAnimationFrame","getDelta","maxPolarAngle","PI","minDistance","maxDistance","visible","i","render"],"version":3,"file":"characterMovement.f20287fd.js.map"}