{"mappings":"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","sources":["node_modules/stats.js/src/Stats.js","example/lib/MarchingCubes.js","node_modules/simplex-noise/simplex-noise.js","example/distancecast.js"],"sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats as default };\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tDynamicDrawUsage,\n\tMesh\n} from 'three';\n\n/**\n * Port of http://webglsamples.org/blob/blob.html\n */\n\nclass MarchingCubes extends Mesh {\n\n\tconstructor( resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 10000 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tsuper( geometry, material );\n\n\t\tconst scope = this;\n\n\t\t// temp buffers used in polygonize\n\n\t\tconst vlist = new Float32Array( 12 * 3 );\n\t\tconst nlist = new Float32Array( 12 * 3 );\n\t\tconst clist = new Float32Array( 12 * 3 );\n\n\t\tthis.enableUvs = enableUvs;\n\t\tthis.enableColors = enableColors;\n\t\tthis.autoUpdate = true;\n\n\t\t// functions have to be object properties\n\t\t// prototype functions kill performance\n\t\t// (tested and it was 4x slower !!!)\n\n\t\tthis.init = function ( resolution ) {\n\n\t\t\tthis.resolution = resolution;\n\n\t\t\t// parameters\n\n\t\t\tthis.isolation = 80.0;\n\n\t\t\t// size of field, 32 is pushing it in Javascript :)\n\n\t\t\tthis.size = resolution;\n\t\t\tthis.size2 = this.size * this.size;\n\t\t\tthis.size3 = this.size2 * this.size;\n\t\t\tthis.halfsize = this.size / 2.0;\n\n\t\t\t// deltas\n\n\t\t\tthis.delta = 2.0 / this.size;\n\t\t\tthis.yd = this.size;\n\t\t\tthis.zd = this.size2;\n\n\t\t\tthis.field = new Float32Array( this.size3 );\n\t\t\tthis.normal_cache = new Float32Array( this.size3 * 3 );\n\t\t\tthis.palette = new Float32Array( this.size3 * 3 );\n\n\t\t\t//\n\n\t\t\tthis.count = 0;\n\n\t\t\tconst maxVertexCount = maxPolyCount * 3;\n\n\t\t\tthis.positionArray = new Float32Array( maxVertexCount * 3 );\n\t\t\tconst positionAttribute = new BufferAttribute( this.positionArray, 3 );\n\t\t\tpositionAttribute.setUsage( DynamicDrawUsage );\n\t\t\tgeometry.setAttribute( 'position', positionAttribute );\n\n\t\t\tthis.normalArray = new Float32Array( maxVertexCount * 3 );\n\t\t\tconst normalAttribute = new BufferAttribute( this.normalArray, 3 );\n\t\t\tnormalAttribute.setUsage( DynamicDrawUsage );\n\t\t\tgeometry.setAttribute( 'normal', normalAttribute );\n\n\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\tthis.uvArray = new Float32Array( maxVertexCount * 2 );\n\t\t\t\tconst uvAttribute = new BufferAttribute( this.uvArray, 2 );\n\t\t\t\tuvAttribute.setUsage( DynamicDrawUsage );\n\t\t\t\tgeometry.setAttribute( 'uv', uvAttribute );\n\n\t\t\t}\n\n\t\t\tif ( this.enableColors ) {\n\n\t\t\t\tthis.colorArray = new Float32Array( maxVertexCount * 3 );\n\t\t\t\tconst colorAttribute = new BufferAttribute( this.colorArray, 3 );\n\t\t\t\tcolorAttribute.setUsage( DynamicDrawUsage );\n\t\t\t\tgeometry.setAttribute( 'color', colorAttribute );\n\n\t\t\t}\n\n\t\t};\n\n\t\t///////////////////////\n\t\t// Polygonization\n\t\t///////////////////////\n\n\t\tfunction lerp( a, b, t ) {\n\n\t\t\treturn a + ( b - a ) * t;\n\n\t\t}\n\n\t\tfunction VIntX( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x + mu * scope.delta;\n\t\t\tvlist[ offset + 1 ] = y;\n\t\t\tvlist[ offset + 2 ] = z;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q + 3 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q + 4 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q + 5 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction VIntY( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x;\n\t\t\tvlist[ offset + 1 ] = y + mu * scope.delta;\n\t\t\tvlist[ offset + 2 ] = z;\n\n\t\t\tconst q2 = q + scope.yd * 3;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q2 + 0 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction VIntZ( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x;\n\t\t\tvlist[ offset + 1 ] = y;\n\t\t\tvlist[ offset + 2 ] = z + mu * scope.delta;\n\n\t\t\tconst q2 = q + scope.zd * 3;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q2 + 0 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction compNorm( q ) {\n\n\t\t\tconst q3 = q * 3;\n\n\t\t\tif ( scope.normal_cache[ q3 ] === 0.0 ) {\n\n\t\t\t\tscope.normal_cache[ q3 + 0 ] = scope.field[ q - 1 ] - scope.field[ q + 1 ];\n\t\t\t\tscope.normal_cache[ q3 + 1 ] =\n\t\t\t\t\tscope.field[ q - scope.yd ] - scope.field[ q + scope.yd ];\n\t\t\t\tscope.normal_cache[ q3 + 2 ] =\n\t\t\t\t\tscope.field[ q - scope.zd ] - scope.field[ q + scope.zd ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Returns total number of triangles. Fills triangles.\n\t\t// (this is where most of time is spent - it's inner work of O(n3) loop )\n\n\t\tfunction polygonize( fx, fy, fz, q, isol ) {\n\n\t\t\t// cache indices\n\t\t\tconst q1 = q + 1,\n\t\t\t\tqy = q + scope.yd,\n\t\t\t\tqz = q + scope.zd,\n\t\t\t\tq1y = q1 + scope.yd,\n\t\t\t\tq1z = q1 + scope.zd,\n\t\t\t\tqyz = q + scope.yd + scope.zd,\n\t\t\t\tq1yz = q1 + scope.yd + scope.zd;\n\n\t\t\tlet cubeindex = 0;\n\t\t\tconst field0 = scope.field[ q ],\n\t\t\t\tfield1 = scope.field[ q1 ],\n\t\t\t\tfield2 = scope.field[ qy ],\n\t\t\t\tfield3 = scope.field[ q1y ],\n\t\t\t\tfield4 = scope.field[ qz ],\n\t\t\t\tfield5 = scope.field[ q1z ],\n\t\t\t\tfield6 = scope.field[ qyz ],\n\t\t\t\tfield7 = scope.field[ q1yz ];\n\n\t\t\tif ( field0 < isol ) cubeindex |= 1;\n\t\t\tif ( field1 < isol ) cubeindex |= 2;\n\t\t\tif ( field2 < isol ) cubeindex |= 8;\n\t\t\tif ( field3 < isol ) cubeindex |= 4;\n\t\t\tif ( field4 < isol ) cubeindex |= 16;\n\t\t\tif ( field5 < isol ) cubeindex |= 32;\n\t\t\tif ( field6 < isol ) cubeindex |= 128;\n\t\t\tif ( field7 < isol ) cubeindex |= 64;\n\n\t\t\t// if cube is entirely in/out of the surface - bail, nothing to draw\n\n\t\t\tconst bits = edgeTable[ cubeindex ];\n\t\t\tif ( bits === 0 ) return 0;\n\n\t\t\tconst d = scope.delta,\n\t\t\t\tfx2 = fx + d,\n\t\t\t\tfy2 = fy + d,\n\t\t\t\tfz2 = fz + d;\n\n\t\t\t// top of the cube\n\n\t\t\tif ( bits & 1 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tVIntX( q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 2 ) {\n\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tVIntY( q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y );\n\n\t\t\t}\n\n\t\t\tif ( bits & 4 ) {\n\n\t\t\t\tcompNorm( qy );\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tVIntX( qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y );\n\n\t\t\t}\n\n\t\t\tif ( bits & 8 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( qy );\n\t\t\t\tVIntY( q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy );\n\n\t\t\t}\n\n\t\t\t// bottom of the cube\n\n\t\t\tif ( bits & 16 ) {\n\n\t\t\t\tcompNorm( qz );\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tVIntX( qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z );\n\n\t\t\t}\n\n\t\t\tif ( bits & 32 ) {\n\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntY(\n\t\t\t\t\tq1z * 3,\n\t\t\t\t\t15,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx2,\n\t\t\t\t\tfy,\n\t\t\t\t\tfz2,\n\t\t\t\t\tfield5,\n\t\t\t\t\tfield7,\n\t\t\t\t\tq1z,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 64 ) {\n\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntX(\n\t\t\t\t\tqyz * 3,\n\t\t\t\t\t18,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx,\n\t\t\t\t\tfy2,\n\t\t\t\t\tfz2,\n\t\t\t\t\tfield6,\n\t\t\t\t\tfield7,\n\t\t\t\t\tqyz,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 128 ) {\n\n\t\t\t\tcompNorm( qz );\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tVIntY( qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz );\n\n\t\t\t}\n\n\t\t\t// vertical lines of the cube\n\t\t\tif ( bits & 256 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( qz );\n\t\t\t\tVIntZ( q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz );\n\n\t\t\t}\n\n\t\t\tif ( bits & 512 ) {\n\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tVIntZ( q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z );\n\n\t\t\t}\n\n\t\t\tif ( bits & 1024 ) {\n\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntZ(\n\t\t\t\t\tq1y * 3,\n\t\t\t\t\t30,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx2,\n\t\t\t\t\tfy2,\n\t\t\t\t\tfz,\n\t\t\t\t\tfield3,\n\t\t\t\t\tfield7,\n\t\t\t\t\tq1y,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 2048 ) {\n\n\t\t\t\tcompNorm( qy );\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tVIntZ( qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz );\n\n\t\t\t}\n\n\t\t\tcubeindex <<= 4; // re-purpose cubeindex into an offset into triTable\n\n\t\t\tlet o1,\n\t\t\t\to2,\n\t\t\t\to3,\n\t\t\t\tnumtris = 0,\n\t\t\t\ti = 0;\n\n\t\t\t// here is where triangles are created\n\n\t\t\twhile ( triTable[ cubeindex + i ] != - 1 ) {\n\n\t\t\t\to1 = cubeindex + i;\n\t\t\t\to2 = o1 + 1;\n\t\t\t\to3 = o1 + 2;\n\n\t\t\t\tposnormtriv(\n\t\t\t\t\tvlist,\n\t\t\t\t\tnlist,\n\t\t\t\t\tclist,\n\t\t\t\t\t3 * triTable[ o1 ],\n\t\t\t\t\t3 * triTable[ o2 ],\n\t\t\t\t\t3 * triTable[ o3 ]\n\t\t\t\t);\n\n\t\t\t\ti += 3;\n\t\t\t\tnumtris ++;\n\n\t\t\t}\n\n\t\t\treturn numtris;\n\n\t\t}\n\n\t\tfunction posnormtriv( pos, norm, colors, o1, o2, o3 ) {\n\n\t\t\tconst c = scope.count * 3;\n\n\t\t\t// positions\n\n\t\t\tscope.positionArray[ c + 0 ] = pos[ o1 ];\n\t\t\tscope.positionArray[ c + 1 ] = pos[ o1 + 1 ];\n\t\t\tscope.positionArray[ c + 2 ] = pos[ o1 + 2 ];\n\n\t\t\tscope.positionArray[ c + 3 ] = pos[ o2 ];\n\t\t\tscope.positionArray[ c + 4 ] = pos[ o2 + 1 ];\n\t\t\tscope.positionArray[ c + 5 ] = pos[ o2 + 2 ];\n\n\t\t\tscope.positionArray[ c + 6 ] = pos[ o3 ];\n\t\t\tscope.positionArray[ c + 7 ] = pos[ o3 + 1 ];\n\t\t\tscope.positionArray[ c + 8 ] = pos[ o3 + 2 ];\n\n\t\t\t// normals\n\n\t\t\tif ( scope.material.flatShading === true ) {\n\n\t\t\t\tconst nx = ( norm[ o1 + 0 ] + norm[ o2 + 0 ] + norm[ o3 + 0 ] ) / 3;\n\t\t\t\tconst ny = ( norm[ o1 + 1 ] + norm[ o2 + 1 ] + norm[ o3 + 1 ] ) / 3;\n\t\t\t\tconst nz = ( norm[ o1 + 2 ] + norm[ o2 + 2 ] + norm[ o3 + 2 ] ) / 3;\n\n\t\t\t\tscope.normalArray[ c + 0 ] = nx;\n\t\t\t\tscope.normalArray[ c + 1 ] = ny;\n\t\t\t\tscope.normalArray[ c + 2 ] = nz;\n\n\t\t\t\tscope.normalArray[ c + 3 ] = nx;\n\t\t\t\tscope.normalArray[ c + 4 ] = ny;\n\t\t\t\tscope.normalArray[ c + 5 ] = nz;\n\n\t\t\t\tscope.normalArray[ c + 6 ] = nx;\n\t\t\t\tscope.normalArray[ c + 7 ] = ny;\n\t\t\t\tscope.normalArray[ c + 8 ] = nz;\n\n\t\t\t} else {\n\n\t\t\t\tscope.normalArray[ c + 0 ] = norm[ o1 + 0 ];\n\t\t\t\tscope.normalArray[ c + 1 ] = norm[ o1 + 1 ];\n\t\t\t\tscope.normalArray[ c + 2 ] = norm[ o1 + 2 ];\n\n\t\t\t\tscope.normalArray[ c + 3 ] = norm[ o2 + 0 ];\n\t\t\t\tscope.normalArray[ c + 4 ] = norm[ o2 + 1 ];\n\t\t\t\tscope.normalArray[ c + 5 ] = norm[ o2 + 2 ];\n\n\t\t\t\tscope.normalArray[ c + 6 ] = norm[ o3 + 0 ];\n\t\t\t\tscope.normalArray[ c + 7 ] = norm[ o3 + 1 ];\n\t\t\t\tscope.normalArray[ c + 8 ] = norm[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( scope.enableUvs ) {\n\n\t\t\t\tconst d = scope.count * 2;\n\n\t\t\t\tscope.uvArray[ d + 0 ] = pos[ o1 + 0 ];\n\t\t\t\tscope.uvArray[ d + 1 ] = pos[ o1 + 2 ];\n\n\t\t\t\tscope.uvArray[ d + 2 ] = pos[ o2 + 0 ];\n\t\t\t\tscope.uvArray[ d + 3 ] = pos[ o2 + 2 ];\n\n\t\t\t\tscope.uvArray[ d + 4 ] = pos[ o3 + 0 ];\n\t\t\t\tscope.uvArray[ d + 5 ] = pos[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tif ( scope.enableColors ) {\n\n\t\t\t\tscope.colorArray[ c + 0 ] = colors[ o1 + 0 ];\n\t\t\t\tscope.colorArray[ c + 1 ] = colors[ o1 + 1 ];\n\t\t\t\tscope.colorArray[ c + 2 ] = colors[ o1 + 2 ];\n\n\t\t\t\tscope.colorArray[ c + 3 ] = colors[ o2 + 0 ];\n\t\t\t\tscope.colorArray[ c + 4 ] = colors[ o2 + 1 ];\n\t\t\t\tscope.colorArray[ c + 5 ] = colors[ o2 + 2 ];\n\n\t\t\t\tscope.colorArray[ c + 6 ] = colors[ o3 + 0 ];\n\t\t\t\tscope.colorArray[ c + 7 ] = colors[ o3 + 1 ];\n\t\t\t\tscope.colorArray[ c + 8 ] = colors[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\tscope.count += 3;\n\n\t\t}\n\n\t\t/////////////////////////////////////\n\t\t// Metaballs\n\t\t/////////////////////////////////////\n\n\t\t// Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\n\t\t// a fixed distance, determined by strength and subtract.\n\n\t\tthis.addBall = function ( ballx, bally, ballz, strength, subtract, colors ) {\n\n\t\t\tconst sign = Math.sign( strength );\n\t\t\tstrength = Math.abs( strength );\n\t\t\tconst userDefineColor = ! ( colors === undefined || colors === null );\n\t\t\tlet ballColor = new Color( ballx, bally, ballz );\n\n\t\t\tif ( userDefineColor ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tballColor =\n\t\t\t\t\t\tcolors instanceof Color\n\t\t\t\t\t\t\t? colors\n\t\t\t\t\t\t\t: Array.isArray( colors )\n\t\t\t\t\t\t\t\t? new Color(\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 0 ] ), 1 ),\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 1 ] ), 1 ),\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 2 ] ), 1 )\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: new Color( colors );\n\n\t\t\t\t} catch ( err ) {\n\n\t\t\t\t\tballColor = new Color( ballx, bally, ballz );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Let's solve the equation to find the radius:\n\t\t\t// 1.0 / (0.000001 + radius^2) * strength - subtract = 0\n\t\t\t// strength / (radius^2) = subtract\n\t\t\t// strength = subtract * radius^2\n\t\t\t// radius^2 = strength / subtract\n\t\t\t// radius = sqrt(strength / subtract)\n\n\t\t\tconst radius = this.size * Math.sqrt( strength / subtract ),\n\t\t\t\tzs = ballz * this.size,\n\t\t\t\tys = bally * this.size,\n\t\t\t\txs = ballx * this.size;\n\n\t\t\tlet min_z = Math.floor( zs - radius );\n\t\t\tif ( min_z < 1 ) min_z = 1;\n\t\t\tlet max_z = Math.floor( zs + radius );\n\t\t\tif ( max_z > this.size - 1 ) max_z = this.size - 1;\n\t\t\tlet min_y = Math.floor( ys - radius );\n\t\t\tif ( min_y < 1 ) min_y = 1;\n\t\t\tlet max_y = Math.floor( ys + radius );\n\t\t\tif ( max_y > this.size - 1 ) max_y = this.size - 1;\n\t\t\tlet min_x = Math.floor( xs - radius );\n\t\t\tif ( min_x < 1 ) min_x = 1;\n\t\t\tlet max_x = Math.floor( xs + radius );\n\t\t\tif ( max_x > this.size - 1 ) max_x = this.size - 1;\n\n\t\t\t// Don't polygonize in the outer layer because normals aren't\n\t\t\t// well-defined there.\n\n\t\t\tlet x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n\n\t\t\tfor ( z = min_z; z < max_z; z ++ ) {\n\n\t\t\t\tz_offset = this.size2 * z;\n\t\t\t\tfz = z / this.size - ballz;\n\t\t\t\tfz2 = fz * fz;\n\n\t\t\t\tfor ( y = min_y; y < max_y; y ++ ) {\n\n\t\t\t\t\ty_offset = z_offset + this.size * y;\n\t\t\t\t\tfy = y / this.size - bally;\n\t\t\t\t\tfy2 = fy * fy;\n\n\t\t\t\t\tfor ( x = min_x; x < max_x; x ++ ) {\n\n\t\t\t\t\t\tfx = x / this.size - ballx;\n\t\t\t\t\t\tval = strength / ( 0.000001 + fx * fx + fy2 + fz2 ) - subtract;\n\t\t\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\t\t\tthis.field[ y_offset + x ] += val * sign;\n\n\t\t\t\t\t\t\t// optimization\n\t\t\t\t\t\t\t// http://www.geisswerks.com/ryan/BLOBS/blobs.html\n\t\t\t\t\t\t\tconst ratio =\n\t\t\t\t\t\t\t\tMath.sqrt( ( x - xs ) * ( x - xs ) + ( y - ys ) * ( y - ys ) + ( z - zs ) * ( z - zs ) ) / radius;\n\t\t\t\t\t\t\tconst contrib =\n\t\t\t\t\t\t\t\t1 - ratio * ratio * ratio * ( ratio * ( ratio * 6 - 15 ) + 10 );\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 0 ] += ballColor.r * contrib;\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 1 ] += ballColor.g * contrib;\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 2 ] += ballColor.b * contrib;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneX = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\txx,\n\t\t\t\tval,\n\t\t\t\txdiv,\n\t\t\t\tcxy,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( x = 0; x < dist; x ++ ) {\n\n\t\t\t\txdiv = x / size;\n\t\t\t\txx = xdiv * xdiv;\n\t\t\t\tval = strength / ( 0.0001 + xx ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcxy = x + y * yd;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ ) {\n\n\t\t\t\t\t\t\tfield[ zd * z + cxy ] += val;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneY = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\tyy,\n\t\t\t\tval,\n\t\t\t\tydiv,\n\t\t\t\tcy,\n\t\t\t\tcxy,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( y = 0; y < dist; y ++ ) {\n\n\t\t\t\tydiv = y / size;\n\t\t\t\tyy = ydiv * ydiv;\n\t\t\t\tval = strength / ( 0.0001 + yy ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcy = y * yd;\n\n\t\t\t\t\tfor ( x = 0; x < size; x ++ ) {\n\n\t\t\t\t\t\tcxy = cy + x;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ ) field[ zd * z + cxy ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneZ = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\tzz,\n\t\t\t\tval,\n\t\t\t\tzdiv,\n\t\t\t\tcz,\n\t\t\t\tcyz,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( z = 0; z < dist; z ++ ) {\n\n\t\t\t\tzdiv = z / size;\n\t\t\t\tzz = zdiv * zdiv;\n\t\t\t\tval = strength / ( 0.0001 + zz ) - subtract;\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcz = zd * z;\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcyz = cz + y * yd;\n\n\t\t\t\t\t\tfor ( x = 0; x < size; x ++ ) field[ cyz + x ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/////////////////////////////////////\n\t\t// Updates\n\t\t/////////////////////////////////////\n\n\t\tthis.setCell = function ( x, y, z, value ) {\n\n\t\t\tconst index = this.size2 * z + this.size * y + x;\n\t\t\tthis.field[ index ] = value;\n\n\t\t};\n\n\t\tthis.getCell = function ( x, y, z ) {\n\n\t\t\tconst index = this.size2 * z + this.size * y + x;\n\t\t\treturn this.field[ index ];\n\n\t\t};\n\n\t\tthis.blur = function ( intensity = 1 ) {\n\n\t\t\tconst field = this.field;\n\t\t\tconst fieldCopy = field.slice();\n\t\t\tconst size = this.size;\n\t\t\tconst size2 = this.size2;\n\t\t\tfor ( let x = 0; x < size; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < size; y ++ ) {\n\n\t\t\t\t\tfor ( let z = 0; z < size; z ++ ) {\n\n\t\t\t\t\t\tconst index = size2 * z + size * y + x;\n\t\t\t\t\t\tlet val = fieldCopy[ index ];\n\t\t\t\t\t\tlet count = 1;\n\n\t\t\t\t\t\tfor ( let x2 = - 1; x2 <= 1; x2 += 2 ) {\n\n\t\t\t\t\t\t\tconst x3 = x2 + x;\n\t\t\t\t\t\t\tif ( x3 < 0 || x3 >= size ) continue;\n\n\t\t\t\t\t\t\tfor ( let y2 = - 1; y2 <= 1; y2 += 2 ) {\n\n\t\t\t\t\t\t\t\tconst y3 = y2 + y;\n\t\t\t\t\t\t\t\tif ( y3 < 0 || y3 >= size ) continue;\n\n\t\t\t\t\t\t\t\tfor ( let z2 = - 1; z2 <= 1; z2 += 2 ) {\n\n\t\t\t\t\t\t\t\t\tconst z3 = z2 + z;\n\t\t\t\t\t\t\t\t\tif ( z3 < 0 || z3 >= size ) continue;\n\n\t\t\t\t\t\t\t\t\tconst index2 = size2 * z3 + size * y3 + x3;\n\t\t\t\t\t\t\t\t\tconst val2 = fieldCopy[ index2 ];\n\n\t\t\t\t\t\t\t\t\tcount ++;\n\t\t\t\t\t\t\t\t\tval += intensity * ( val2 - val ) / count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfield[ index ] = val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\t// wipe the normal cache\n\n\t\t\tfor ( let i = 0; i < this.size3; i ++ ) {\n\n\t\t\t\tthis.normal_cache[ i * 3 ] = 0.0;\n\t\t\t\tthis.field[ i ] = 0.0;\n\t\t\t\tthis.palette[ i * 3 ] = this.palette[ i * 3 + 1 ] = this.palette[\n\t\t\t\t\ti * 3 + 2\n\t\t\t\t] = 0.0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tthis.count = 0;\n\n\t\t\t// Triangulate. Yeah, this is slow.\n\n\t\t\tconst smin2 = this.size - 2;\n\n\t\t\tfor ( let z = 1; z < smin2; z ++ ) {\n\n\t\t\t\tconst z_offset = this.size2 * z;\n\t\t\t\tconst fz = ( z - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\tfor ( let y = 1; y < smin2; y ++ ) {\n\n\t\t\t\t\tconst y_offset = z_offset + this.size * y;\n\t\t\t\t\tconst fy = ( y - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\t\tfor ( let x = 1; x < smin2; x ++ ) {\n\n\t\t\t\t\t\tconst fx = ( x - this.halfsize ) / this.halfsize; //+ 1\n\t\t\t\t\t\tconst q = y_offset + x;\n\n\t\t\t\t\t\t polygonize( fx, fy, fz, q, this.isolation );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.geometry.setDrawRange( 0, this.count );\n\n\t\t\t// update geometry data\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\t\t\tgeometry.getAttribute( 'normal' ).needsUpdate = true;\n\n\t\t\tif ( this.enableUvs ) geometry.getAttribute( 'uv' ).needsUpdate = true;\n\t\t\tif ( this.enableColors ) geometry.getAttribute( 'color' ).needsUpdate = true;\n\n\t\t\t// safety check\n\n\t\t\tif ( this.count / 3 > maxPolyCount ) console.warn( 'THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.' );\n\n\t\t};\n\n\t\tthis.onBeforeRender = function () {\n\n\t\t\tif ( this.autoUpdate ) {\n\n\t\t\t\tthis.update();\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.init( resolution );\n\n\t}\n\n}\n\nMarchingCubes.prototype.isMarchingCubes = true;\n\n/////////////////////////////////////\n// Marching cubes lookup tables\n/////////////////////////////////////\n\n// These tables are straight from Paul Bourke's page:\n// http://paulbourke.net/geometry/polygonise/\n// who in turn got them from Cory Gene Bloyd.\n\nconst edgeTable = new Int32Array( [\n\t0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n\t0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n\t0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n\t0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n\t0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n\t0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n\t0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\n\t0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n\t0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\n\t0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n\t0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\n\t0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n\t0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\n\t0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n\t0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\n\t0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n\t0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n\t0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n\t0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n\t0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n\t0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n\t0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n\t0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n\t0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\n\t0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n\t0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\n\t0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n\t0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\n\t0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n\t0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\n\t0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n\t0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0 ] );\n\nconst triTable = new Int32Array( [\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 9, 8, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 0, 2, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 8, 3, 2, 10, 8, 10, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 8, 11, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 2, 1, 9, 11, 9, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 11, 10, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 10, 1, 0, 8, 10, 8, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 9, 0, 3, 11, 9, 11, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 7, 3, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 1, 9, 4, 7, 1, 7, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 4, 7, 3, 0, 4, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 9, 0, 2, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 4, 7, 11, 2, 4, 2, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 8, 4, 7, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 3, 11, 10, 7, 8, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, - 1, - 1, - 1, - 1,\n\t4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 4, 11, 9, 9, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 1, 5, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 5, 4, 8, 3, 5, 3, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 10, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 2, 10, 5, 4, 2, 4, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 0, 8, 11, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 0, 1, 5, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, - 1, - 1, - 1, - 1,\n\t10, 3, 11, 10, 1, 3, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, - 1, - 1, - 1, - 1,\n\t5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t5, 4, 8, 5, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 5, 7, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 3, 0, 9, 5, 3, 5, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 8, 0, 1, 7, 1, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 9, 5, 7, 10, 1, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, - 1, - 1, - 1, - 1,\n\t8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 2, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 9, 5, 7, 8, 9, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, - 1, - 1, - 1, - 1,\n\t11, 2, 1, 11, 1, 7, 7, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, - 1, - 1, - 1, - 1,\n\t5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, - 1,\n\t11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, - 1,\n\t11, 10, 5, 7, 11, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 1, 9, 8, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 2, 6, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 1, 2, 6, 3, 0, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 6, 5, 9, 0, 6, 0, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 0, 8, 11, 2, 0, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, - 1, - 1, - 1, - 1,\n\t6, 3, 11, 6, 5, 3, 5, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, - 1, - 1, - 1, - 1,\n\t6, 5, 9, 6, 9, 11, 11, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 4, 7, 3, 6, 5, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 5, 10, 6, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t6, 1, 2, 6, 5, 1, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, - 1, - 1, - 1, - 1,\n\t7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, - 1,\n\t3, 11, 2, 7, 8, 4, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1,\n\t9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, - 1,\n\t8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, - 1,\n\t0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, - 1,\n\t6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 6, 4, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 10, 6, 4, 9, 10, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 0, 1, 10, 6, 0, 6, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t1, 4, 9, 1, 2, 4, 2, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, - 1, - 1, - 1, - 1,\n\t0, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 2, 8, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 10, 6, 4, 11, 2, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, - 1,\n\t9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, - 1, - 1, - 1, - 1,\n\t8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, - 1,\n\t3, 11, 6, 3, 6, 0, 0, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 4, 8, 11, 6, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 10, 6, 7, 8, 10, 8, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 10, 7, 1, 1, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, - 1,\n\t7, 8, 0, 7, 0, 6, 6, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 3, 2, 6, 7, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, - 1,\n\t1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, - 1,\n\t11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, - 1, - 1, - 1, - 1,\n\t8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, - 1,\n\t0, 9, 1, 11, 6, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, - 1, - 1, - 1, - 1,\n\t7, 11, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 9, 8, 3, 1, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 8, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 9, 0, 2, 10, 9, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, - 1, - 1, - 1, - 1,\n\t7, 2, 3, 6, 2, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 0, 8, 7, 6, 0, 6, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 7, 6, 2, 3, 7, 0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 10, 1, 7, 1, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, - 1, - 1, - 1, - 1,\n\t0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, - 1, - 1, - 1, - 1,\n\t7, 6, 10, 7, 10, 8, 8, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 11, 8, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 3, 0, 6, 0, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 6, 11, 8, 4, 6, 9, 0, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 6, 11, 8, 2, 10, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, - 1, - 1, - 1, - 1,\n\t4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, - 1, - 1, - 1, - 1,\n\t10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, - 1,\n\t8, 2, 3, 8, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, - 1, - 1, - 1, - 1,\n\t1, 9, 4, 1, 4, 2, 2, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, - 1, - 1, - 1, - 1,\n\t10, 1, 0, 10, 0, 6, 6, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, - 1,\n\t10, 9, 4, 6, 10, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 5, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 1, 5, 4, 0, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 10, 1, 2, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, - 1, - 1, - 1, - 1,\n\t7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, - 1, - 1, - 1, - 1,\n\t3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, - 1,\n\t7, 2, 3, 7, 6, 2, 5, 4, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, - 1, - 1, - 1, - 1,\n\t3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, - 1, - 1, - 1, - 1,\n\t6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, - 1,\n\t9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, - 1, - 1, - 1, - 1,\n\t1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, - 1,\n\t4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, - 1,\n\t7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, - 1, - 1, - 1, - 1,\n\t6, 9, 5, 6, 11, 9, 11, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, - 1, - 1, - 1, - 1,\n\t0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, - 1, - 1, - 1, - 1,\n\t6, 11, 3, 6, 3, 5, 5, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, - 1, - 1, - 1, - 1,\n\t0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, - 1,\n\t11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, - 1,\n\t6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, - 1, - 1, - 1, - 1,\n\t5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, - 1, - 1, - 1, - 1,\n\t9, 5, 6, 9, 6, 0, 0, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, - 1,\n\t1, 5, 6, 2, 1, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, - 1,\n\t10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, - 1, - 1, - 1, - 1,\n\t0, 3, 8, 5, 6, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 5, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 7, 5, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 11, 7, 5, 8, 3, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 11, 7, 5, 10, 11, 1, 9, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, - 1, - 1, - 1, - 1,\n\t11, 1, 2, 11, 7, 1, 7, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, - 1, - 1, - 1, - 1,\n\t9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, - 1, - 1, - 1, - 1,\n\t7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, - 1,\n\t2, 5, 10, 2, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, - 1, - 1, - 1, - 1,\n\t9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, - 1,\n\t1, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 7, 0, 7, 1, 1, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 3, 9, 3, 5, 5, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 7, 5, 9, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 8, 4, 5, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, - 1, - 1, - 1, - 1,\n\t10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, - 1,\n\t2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, - 1, - 1, - 1, - 1,\n\t0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, - 1,\n\t0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, - 1,\n\t9, 4, 5, 2, 11, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, - 1, - 1, - 1, - 1,\n\t5, 10, 2, 5, 2, 4, 4, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, - 1,\n\t5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 3, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 5, 1, 0, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, - 1, - 1, - 1, - 1,\n\t9, 4, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 11, 7, 4, 9, 11, 9, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, - 1, - 1, - 1, - 1,\n\t1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, - 1, - 1, - 1, - 1,\n\t3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, - 1,\n\t4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, - 1, - 1, - 1, - 1,\n\t9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, - 1,\n\t11, 7, 4, 11, 4, 2, 2, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, - 1, - 1, - 1, - 1,\n\t2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, - 1, - 1, - 1, - 1,\n\t9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, - 1,\n\t3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, - 1,\n\t1, 10, 2, 8, 7, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 7, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, - 1, - 1, - 1, - 1,\n\t4, 0, 3, 7, 4, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 8, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 11, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 10, 0, 10, 8, 8, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 1, 10, 11, 3, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 11, 1, 11, 9, 9, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, - 1, - 1, - 1, - 1,\n\t0, 2, 11, 8, 0, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 2, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 10, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 2, 0, 9, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, - 1, - 1, - 1, - 1,\n\t1, 10, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 8, 9, 1, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 9, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 3, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1 ] );\n\nexport { MarchingCubes, edgeTable, triTable };","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","import Stats from 'stats.js/src/Stats';\nimport * as dat from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { MarchingCubes } from './lib/MarchingCubes.js';\nimport SimplexNoise from 'simplex-noise';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, MeshBVHVisualizer } from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst params = {\n\n\tvisualizeBounds: false,\n\tvisualBoundsDepth: 10,\n\n\tvolume: {\n\t\tdisplay: 1,\n\t\thideWhileGenerating: false,\n\t\talwaysShowDistance: true,\n\t\tsurfaceOnly: false,\n\t\tdistance: 1,\n\t\tresolution: 100,\n\t\tradius: 4,\n\t},\n\tdisplayClosestPoint: true,\n\n};\n\nlet stats;\nlet scene, camera, renderer, controls, boundsViz;\nlet terrain, targetContainer, targetMesh, transformControls;\nlet marchingCubes, marchingCubesContainer;\nlet sphere1, sphere2, line;\nlet needsUpdate = false;\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 10, 45 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 20, 20, 20 );\n\tlight.castShadow = true;\n\tlight.shadow.mapSize.set( 2048, 2048 );\n\n\tconst shadowCam = light.shadow.camera;\n\tshadowCam.left = shadowCam.bottom = - 15;\n\tshadowCam.right = shadowCam.top = 15;\n\tshadowCam.updateProjectionMatrix();\n\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xE0F7FA, 0.5 ) );\n\n\t// geometry setup\n\tconst size = 50;\n\tconst dim = 250;\n\tconst planeGeom = new THREE.PlaneBufferGeometry( size, size, dim - 1, dim - 1 );\n\tconst posAttr = planeGeom.attributes.position;\n\n\tconst seed = Math.floor( Math.random() * 100 );\n\tconst noise = new SimplexNoise( seed );\n\tfor ( let i = 0; i < dim * dim; i ++ ) {\n\n\t\tconst x = posAttr.getX( i ) / 15;\n\t\tconst y = posAttr.getY( i ) / 15;\n\t\tposAttr.setZ( i, noise.noise2D( x, y ) * 3 );\n\n\t}\n\n\tplaneGeom.computeVertexNormals();\n\tplaneGeom.computeBoundsTree();\n\n\tterrain = new THREE.Mesh( planeGeom, new THREE.MeshStandardMaterial( {\n\t\tcolor: 0xFFFFFF,\n\t\tmetalness: 0.1,\n\t\troughness: 0.9,\n\t\tside: THREE.DoubleSide,\n\t} ) );\n\tterrain.rotation.x = - Math.PI / 2;\n\tterrain.position.y = - 3;\n\tterrain.receiveShadow = true;\n\tscene.add( terrain );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.z = 5;\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst shapeMaterial = new THREE.MeshStandardMaterial( { roughness: 0.75, metalness: 0.1 } );\n\ttargetContainer = new THREE.Group();\n\tscene.add( targetContainer );\n\n\ttargetMesh = new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.5, 0.25, 1, 20, 1 ), shapeMaterial );\n\ttargetMesh.castShadow = true;\n\ttargetMesh.receiveShadow = true;\n\ttargetMesh.geometry.computeBoundsTree();\n\ttargetMesh.geometry.computeBoundingSphere();\n\ttargetContainer.add( targetMesh );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\ttransformControls.attach( targetContainer );\n\ttransformControls.addEventListener( 'dragging-changed', e => {\n\n\t\tcontrols.enabled = ! e.value;\n\t\tif ( ! e.value ) needsUpdate = true;\n\n\t} );\n\ttransformControls.addEventListener( 'objectChange', e => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tscene.add( transformControls );\n\n\tconst cubeMat = new THREE.MeshStandardMaterial( {\n\t\tflatShading: true,\n\t\tcolor: 0xE91E63,\n\t\tmetalness: 0.0,\n\t\troughness: 0.35,\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\topacity: 0.15,\n\t\tpremultipliedAlpha: true,\n\t} );\n\tmarchingCubes = new MarchingCubes( 100, cubeMat, false, false, 1000000 );\n\tmarchingCubes.isolation = 0;\n\tmarchingCubes.autoUpdate = false;\n\n\tmarchingCubesContainer = new THREE.Group();\n\tmarchingCubesContainer.scale.multiplyScalar( 5 );\n\tmarchingCubesContainer.add( marchingCubes );\n\tscene.add( marchingCubesContainer );\n\n\tsphere1 = new THREE.Mesh(\n\t\tnew THREE.SphereBufferGeometry( 0.025, 20, 20 ),\n\t\tnew THREE.MeshBasicMaterial( {\n\t\t\tcolor: 0xE91E63,\n\t\t} ) );\n\tsphere1.castShadow = true;\n\tscene.add( sphere1 );\n\n\tsphere2 = sphere1.clone();\n\tsphere2.castShadow = true;\n\tscene.add( sphere2 );\n\n\tconst lineCube = new THREE.Mesh( new THREE.BoxBufferGeometry(), sphere1.material );\n\tlineCube.castShadow = true;\n\tlineCube.position.z = 0.5;\n\n\tline = new THREE.Object3D();\n\tline.add( lineCube );\n\tscene.add( line );\n\n\tscene.updateMatrixWorld( true );\n\n\tconst gui = new dat.GUI( { width: 300 } );\n\tgui.add( params, 'visualizeBounds' ).onChange( () => updateFromOptions() );\n\tgui.add( params, 'visualBoundsDepth' ).min( 1 ).max( 40 ).step( 1 ).onChange( () => updateFromOptions() );\n\n\tconst mcFolder = gui.addFolder( 'distanceVisualization' );\n\tmcFolder.add( params.volume, 'display', { 'hide': 0, 'distance to terrain': 1, 'distance to mesh': 2 } ).onChange( () => {\n\n\t\tregenerate = true;\n\n\t} );\n\tmcFolder.add( params.volume, 'hideWhileGenerating' );\n\tmcFolder.add( params.volume, 'alwaysShowDistance' );\n\tmcFolder.add( params.volume, 'surfaceOnly' ).onChange( () => regenerate = true );\n\tmcFolder.add( params.volume, 'distance' ).min( 0 ).max( 2 ).step( 0.01 ).onChange( () => regenerate = true );\n\tmcFolder.add( params.volume, 'radius' ).min( 1 ).max( 20 ).onChange( () => regenerate = true );\n\tmcFolder.add( params.volume, 'resolution', 5, 200, 1 ).onChange( () => regenerate = true );\n\tmcFolder.open();\n\n\tgui.add( transformControls, 'mode', [ 'translate', 'rotate' ] );\n\n\tconst posFolder = gui.addFolder( 'position' );\n\tposFolder.add( targetContainer.position, 'x' ).min( - 5 ).max( 5 ).step( 0.001 ).listen();\n\tposFolder.add( targetContainer.position, 'y' ).min( - 5 ).max( 5 ).step( 0.001 ).listen();\n\tposFolder.add( targetContainer.position, 'z' ).min( - 5 ).max( 5 ).step( 0.001 ).listen();\n\n\tconst rotFolder = gui.addFolder( 'rotation' );\n\trotFolder.add( targetContainer.rotation, 'x' ).min( - Math.PI ).max( Math.PI ).step( 0.001 ).listen();\n\trotFolder.add( targetContainer.rotation, 'y' ).min( - Math.PI ).max( Math.PI ).step( 0.001 ).listen();\n\trotFolder.add( targetContainer.rotation, 'z' ).min( - Math.PI ).max( Math.PI ).step( 0.001 ).listen();\n\n\tgui.open();\n\n\tupdateDistanceCheck();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.key ) {\n\n\t\t\tcase 'w':\n\t\t\t\ttransformControls.mode = 'translate';\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\ttransformControls.mode = 'rotate';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tgui.controllersRecursive().forEach( c => c.updateDisplay() );\n\n\t} );\n\n}\n\nfunction updateFromOptions() {\n\n\t// Update bounds viz\n\tif ( boundsViz && ! params.visualizeBounds ) {\n\n\t\tscene.remove( boundsViz );\n\t\tboundsViz = null;\n\n\t}\n\n\tif ( ! boundsViz && params.visualizeBounds ) {\n\n\t\tboundsViz = new MeshBVHVisualizer( terrain );\n\t\tscene.add( boundsViz );\n\n\t}\n\n\tif ( boundsViz ) {\n\n\t\tboundsViz.depth = params.visualBoundsDepth;\n\n\t}\n\n}\n\nfunction updateDistanceCheck( fastCheck ) {\n\n\ttargetContainer.updateMatrixWorld();\n\tconst targetToBvh =\n\t\tnew THREE.Matrix4()\n\t\t    .copy( terrain.matrixWorld ).invert()\n\t\t\t.multiply( targetContainer.matrixWorld );\n\n\t// get the closest point\n\tconst volumeDistance = params.volume.distance;\n\tconst maxDistance = volumeDistance;\n\tconst minDistance = fastCheck ? volumeDistance : 0;\n\n\tconst distanceResult1 = {};\n\tconst distanceResult2 = {};\n\tconst foundPoint = ! ! terrain.geometry.boundsTree.closestPointToGeometry(\n\t\ttargetMesh.geometry,\n\t\ttargetToBvh,\n\t\tdistanceResult1,\n\t\tdistanceResult2,\n\t\tminDistance,\n\t\tmaxDistance,\n\t);\n\n\tconst hit = foundPoint && distanceResult1.distance < volumeDistance;\n\tif ( hit ) {\n\n\t\t// the resulting points are provided in the local frame of the the geometries\n\t\tsphere1.position.copy( distanceResult1.point );\n\t\tsphere2.position.copy( distanceResult2.point ).applyMatrix4( targetToBvh );\n\n\t\t// update the line indicating closest point\n\t\tsphere1.position.applyMatrix4( terrain.matrixWorld );\n\t\tsphere2.position.applyMatrix4( terrain.matrixWorld );\n\n\t\tline.position.copy( sphere1.position );\n\t\tline.lookAt( sphere2.position );\n\t\tline.scale.set(\n\t\t\t0.01,\n\t\t\t0.01,\n\t\t\tsphere1.position.distanceTo( sphere2.position )\n\t\t);\n\n\t}\n\n\ttargetMesh.material.color.set( hit ? 0xE91E63 : 0x666666 );\n\ttargetMesh.material.emissive.set( 0xE91E63 ).multiplyScalar( hit ? 0.25 : 0 );\n\n\tconst areVisible = hit && ! fastCheck;\n\tline.visible = areVisible;\n\tsphere1.visible = areVisible;\n\tsphere2.visible = areVisible;\n\n}\n\nfunction* updateMarchingCubes() {\n\n\tif ( params.volume.display == 0 ) return;\n\n\tupdateDistanceCheck();\n\n\tconst isDistanceToTarget = params.volume.display == 2;\n\n\tconst pos = new THREE.Vector3();\n\tconst surfaceOnly = params.volume.surfaceOnly;\n\tconst resolution = params.volume.resolution;\n\tconst distance = params.volume.distance;\n\tconst radius = params.volume.radius;\n\tlet fieldSize;\n\tlet worldToBvh;\n\tlet distanceMesh;\n\n\tif ( isDistanceToTarget ) {\n\n\t\ttargetContainer.add( marchingCubesContainer );\n\t\tworldToBvh = new THREE.Matrix4().identity();\n\t\tfieldSize = ( targetMesh.geometry.boundingSphere.radius + distance ) * 2;\n\t\tdistanceMesh = targetMesh;\n\n\t} else {\n\n\t\tscene.add( marchingCubesContainer );\n\t\tfieldSize = ( radius + 4 * radius / resolution ) * 2;\n\t\tworldToBvh = new THREE.Matrix4().copy( terrain.matrixWorld ).invert();\n\t\tdistanceMesh = terrain;\n\n\t}\n\n\tmarchingCubesContainer.scale.set( fieldSize / 2, fieldSize / 2, fieldSize / 2 );\n\tmarchingCubesContainer.updateMatrixWorld();\n\n\t// Create a new marching cubes container to update the resolution\n\tmarchingCubes.init( resolution );\n\tmarchingCubes.updateMatrixWorld();\n\n\t// marching cubes ranges from -1 to 1\n\tconst dim = marchingCubes.matrixWorld.getMaxScaleOnAxis();\n\tconst min = - dim;\n\tconst size = marchingCubes.size;\n\tconst cellWidth = 2 * dim / size;\n\tconst cellWidth2 = cellWidth / 2;\n\n\tmarchingCubes.isolation = 0.5;\n\tmarchingCubes.position.x = 1 / size;\n\tmarchingCubes.position.y = 1 / size;\n\tmarchingCubes.position.z = 1 / size;\n\n\tmarchingCubes.reset();\n\n\t// get the world distance\n\tconst distanceResult = {};\n\tlet count = 0;\n\tfor ( let y = 0; y < size; y ++ ) {\n\n\t\tfor ( let x = 0; x < size; x ++ ) {\n\n\t\t\tfor ( let z = 0; z < size; z ++ ) {\n\n\t\t\t\tpos.x = min + cellWidth2 + x * cellWidth;\n\t\t\t\tpos.y = min + cellWidth2 + y * cellWidth;\n\t\t\t\tpos.z = min + cellWidth2 + z * cellWidth;\n\n\t\t\t\tif ( isDistanceToTarget || surfaceOnly || pos.length() < radius && ! isDistanceToTarget ) {\n\n\t\t\t\t\tpos.applyMatrix4( worldToBvh );\n\n\t\t\t\t\tconst foundPoint = ! ! distanceMesh.geometry.boundsTree.closestPointToPoint(\n\t\t\t\t\t\tpos,\n\t\t\t\t\t\tdistanceResult,\n\t\t\t\t\t\tdistance,\n\t\t\t\t\t\tdistance,\n\t\t\t\t\t);\n\t\t\t\t\tconst result = distanceResult.distance < distance;\n\t\t\t\t\tmarchingCubes.setCell( x, y, z, foundPoint && result ? 0 : 1 );\n\n\t\t\t\t}\n\n\t\t\t\tcount ++;\n\n\t\t\t\tyield count / ( size * size * size );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tmarchingCubes.blur( 1 );\n\n}\n\nlet currentTask = null;\nlet regenerate = true;\nfunction render() {\n\n\tstats.begin();\n\n\tif ( needsUpdate ) {\n\n\t\tupdateDistanceCheck( ! params.volume.alwaysShowDistance );\n\t\tneedsUpdate = false;\n\n\t}\n\n\tif ( boundsViz ) {\n\n\t\tboundsViz.update();\n\n\t}\n\n\t// start regenerating the marching cubes mesh if needed\n\tif ( regenerate ) {\n\n\t\tcurrentTask = updateMarchingCubes();\n\t\tregenerate = false;\n\n\t}\n\n\t// console.log('----');\n\t// update the marching cubes volume\n\tlet percentage = 0;\n\tif ( currentTask ) {\n\n\t\tlet startTime = window.performance.now();\n\t\twhile ( window.performance.now() - startTime < 15 ) {\n\n\t\t\tconst res = currentTask.next();\n\t\t\tpercentage = res.value;\n\n\t\t\tif ( res.done ) {\n\n\t\t\t\tcurrentTask = null;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tmarchingCubes.update();\n\n\t\tmarchingCubes.visible = ! params.volume.hideWhileGenerating && params.volume.display != 0;\n\n\t}\n\n\t// Update visibility of marching cubes mesh\n\tif ( ! currentTask ) {\n\n\t\tmarchingCubes.visible = true;\n\n\t}\n\n\t// update loading bar\n\tdocument.getElementById( 'loader' ).setAttribute( 'style', `width: ${ percentage * 100 }%` );\n\n\t// render\n\trenderer.render( scene, camera );\n\tstats.end();\n\n\trequestAnimationFrame( render );\n\n}\n\ninit();\nupdateFromOptions();\nrender();\n"],"names":["$dfab0b5db083582f$export$2e2bcd8739ae039","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","$2231cff739c0191c$export$14387c46dff8604b","$hGT0Q","Mesh","resolution","material","enableUvs","enableColors","maxPolyCount","geometry","BufferGeometry","super","scope","vlist","Float32Array","nlist","clist","lerp","a","b","t","VIntX","q","offset","isol","x","y","z","valp1","valp2","c_offset1","c_offset2","mu","nc","normal_cache","delta","palette","VIntY","q2","yd","VIntZ","zd","compNorm","q3","field","polygonize","fx","fy","fz","q1","qy","qz","q1y","q1z","qyz","q1yz","cubeindex","field0","field1","field2","field3","field4","field5","field6","field7","bits","$2231cff739c0191c$export$3862a3f34ed06da0","d","fx2","fy2","fz2","o1","o2","o3","numtris","$2231cff739c0191c$export$58dc940266ca4076","posnormtriv","pos","norm","colors","c","count","positionArray","flatShading","nx","ny","nz","normalArray","uvArray","colorArray","autoUpdate","init","isolation","size","size2","size3","halfsize","maxVertexCount","positionAttribute","BufferAttribute","setUsage","DynamicDrawUsage","setAttribute","normalAttribute","uvAttribute","colorAttribute","addBall","ballx","bally","ballz","strength","subtract","sign","abs","userDefineColor","ballColor","Color","Array","isArray","err","radius","sqrt","zs","ys","xs","min_z","floor","max_z","min_y","max_y","min_x","y_offset","z_offset","val","max_x","ratio","contrib","r","g","addPlaneX","xx","xdiv","cxy","dist","addPlaneY","yy","ydiv","cy","addPlaneZ","zz","zdiv","cz","cyz","setCell","index","getCell","blur","intensity","fieldCopy","slice","x2","x3","y2","y3","z2","z3","val2","reset","smin2","setDrawRange","getAttribute","needsUpdate","console","warn","onBeforeRender","prototype","isMarchingCubes","Int32Array","F2","G2","G3","F4","G4","SimplexNoise","randomOrSeed","random","s0","s1","s2","mash","masher","arguments","alea","p","buildPermutationTable","perm","Uint8Array","permMod12","aux","n","data","toString","h","charCodeAt","grad3","grad4","noise2D","xin","yin","i1","j1","n0","n1","n2","s","j","x0","y0","x1","y1","ii","jj","t0","gi0","t1","gi1","t2","gi2","noise3D","zin","n3","k1","i2","j2","k2","k","z0","z1","kk","t3","gi3","noise4D","w","n4","l1","l2","i3","j3","k3","l3","l","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","define","amd","$862838c23d1f2dba$exports","raycast","$aBPXg","acceleratedRaycast","computeBoundsTree","disposeBoundsTree","$e6d678ed9148c8a8$var$params","visualizeBounds","visualBoundsDepth","volume","hideWhileGenerating","alwaysShowDistance","surfaceOnly","distance","displayClosestPoint","$e6d678ed9148c8a8$var$stats","$e6d678ed9148c8a8$var$scene","$e6d678ed9148c8a8$var$camera","$e6d678ed9148c8a8$var$renderer","$e6d678ed9148c8a8$var$controls","$e6d678ed9148c8a8$var$boundsViz","$e6d678ed9148c8a8$var$terrain","$e6d678ed9148c8a8$var$targetContainer","$e6d678ed9148c8a8$var$targetMesh","$e6d678ed9148c8a8$var$transformControls","$e6d678ed9148c8a8$var$marchingCubes","$e6d678ed9148c8a8$var$marchingCubesContainer","$e6d678ed9148c8a8$var$sphere1","$e6d678ed9148c8a8$var$sphere2","$e6d678ed9148c8a8$var$line","$e6d678ed9148c8a8$var$needsUpdate","$e6d678ed9148c8a8$var$updateFromOptions","remove","MeshBVHVisualizer","add","depth","$e6d678ed9148c8a8$var$updateDistanceCheck","fastCheck","updateMatrixWorld","targetToBvh","Matrix4","copy","matrixWorld","invert","multiply","volumeDistance","maxDistance","minDistance","distanceResult1","distanceResult2","hit","boundsTree","closestPointToGeometry","position","point","applyMatrix4","lookAt","scale","set","distanceTo","color","emissive","multiplyScalar","areVisible","visible","$e6d678ed9148c8a8$var$currentTask","$e6d678ed9148c8a8$var$regenerate","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","body","Scene","fog","Fog","light","DirectionalLight","castShadow","shadow","mapSize","shadowCam","camera","left","bottom","right","top","updateProjectionMatrix","AmbientLight","planeGeom","PlaneBufferGeometry","dim","posAttr","attributes","seed","noise","$parcel$interopDefault","getX","getY","setZ","computeVertexNormals","MeshStandardMaterial","metalness","roughness","side","DoubleSide","rotation","PI","receiveShadow","PerspectiveCamera","far","shapeMaterial","Group","CylinderBufferGeometry","computeBoundingSphere","$W2bOH","OrbitControls","$1h7P3","TransformControls","attach","e","cubeMat","transparent","depthWrite","opacity","premultipliedAlpha","SphereBufferGeometry","MeshBasicMaterial","clone","lineCube","BoxBufferGeometry","Object3D","gui","$ghLil","GUI","onChange","step","mcFolder","addFolder","hide","open","posFolder","listen","rotFolder","aspect","key","controllersRecursive","forEach","updateDisplay","$e6d678ed9148c8a8$var$init","$e6d678ed9148c8a8$var$render","isDistanceToTarget","Vector3","fieldSize","worldToBvh","distanceMesh","identity","boundingSphere","getMaxScaleOnAxis","cellWidth","cellWidth2","distanceResult","foundPoint","closestPointToPoint","result","$e6d678ed9148c8a8$var$updateMarchingCubes","percentage","startTime","res","next","done","getElementById","render","requestAnimationFrame"],"version":3,"file":"distancecast.96a59819.js.map"}