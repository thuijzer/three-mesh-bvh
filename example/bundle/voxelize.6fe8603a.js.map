{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/voxelize.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport Stats from 'stats.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { MeshBVH } from '..';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry.js';\nimport { GenerateMeshBVHWorker } from '../src/workers/GenerateMeshBVHWorker.js';\n\nlet renderer, camera, scene, gui, stats, outputContainer;\nlet voxels, controls, boxHelper;\nlet needsUpdate = false;\nlet voxelTask = null;\n\nconst params = {\n\tmodel: 'Torus Knot',\n\tscale: 0.75,\n\tresolution: 30,\n\tsolid: true,\n\tdisplayMesh: true,\n\tdisplayBounds: false,\n\tinsideOnly: false,\n\trebuild: () => needsUpdate = true,\n};\n\nconst models = {};\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x161e1d;\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 3, 6, 9 );\n\tscene.add( light );\n\n\tconst revLight = new THREE.DirectionalLight( 0xffffff, 0.1 );\n\trevLight.position.set( - 3, - 6, - 9 );\n\tscene.add( revLight );\n\n\tconst ambient = new THREE.AmbientLight( 0xffffff, 0.25 );\n\tscene.add( ambient );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 1, 0.5, 1 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst wireframeMaterial = new THREE.MeshBasicMaterial( {\n\n\t\ttransparent: true,\n\t\twireframe: true,\n\t\tdepthWrite: false,\n\t\topacity: 0.02,\n\n\t} );\n\n\t// load the model\n\tnew GLTFLoader().setMeshoptDecoder( MeshoptDecoder ).load( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/happy-buddha/buddha.glb', gltf => {\n\n\t\tconst model = gltf.scene.children[ 0 ];\n\t\tmodel.geometry.center();\n\t\tmodel.material = wireframeMaterial;\n\t\tmodel.scale.setScalar( 1.5 );\n\t\tmodel.rotation.y = - Math.PI / 2;\n\n\t\tconst generator = new GenerateMeshBVHWorker();\n\t\tgenerator.generate( model.geometry ).then( bvh => {\n\n\t\t\tscene.add( model );\n\t\t\tmodels[ 'Buddha' ] = { model, bvh };\n\t\t\tif ( params.model === 'Buddha' ) {\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t} );\n\n\tnew GLTFLoader().setMeshoptDecoder( MeshoptDecoder ).load( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb', gltf => {\n\n\t\tconst model = gltf.scene.children[ 0 ];\n\t\tmodel.geometry.center();\n\t\tmodel.material = wireframeMaterial;\n\t\tmodel.rotation.y = Math.PI / 2;\n\t\tmodel.scale.setScalar( 0.65 );\n\n\t\tconst generator = new GenerateMeshBVHWorker();\n\t\tgenerator.generate( model.geometry ).then( bvh => {\n\n\t\t\tscene.add( model );\n\t\t\tmodels[ 'Bunny' ] = { model, bvh };\n\t\t\tif ( params.model === 'Bunny' ) {\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t} );\n\n\t{\n\n\t\tconst model = new THREE.Mesh( new THREE.TorusKnotBufferGeometry( 0.3, 0.1, 400, 60 ), wireframeMaterial );\n\t\tconst bvh = new MeshBVH( model.geometry );\n\t\tscene.add( model );\n\n\t\tmodels[ 'Torus Knot' ] = {\n\t\t\tbvh: bvh,\n\t\t\tmodel: model,\n\t\t};\n\t\tneedsUpdate = true;\n\n\t}\n\n\tmodels[ 'Buddha' ] = { model: null, bvh: null };\n\tmodels[ 'Bunny' ] = { model: null, bvh: null };\n\n\tconst boxHelperMesh = new THREE.Mesh( new THREE.BoxBufferGeometry() );\n\tboxHelper = new THREE.BoxHelper( boxHelperMesh, 0xffffff );\n\tboxHelper.material.opacity = 0.35;\n\tboxHelper.material.transparent = true;\n\tscene.add( boxHelper );\n\n\tgui = new GUI();\n\tgui.add( params, 'model', Object.keys( models ) ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\n\tconst computeFolder = gui.addFolder( 'voxelize' );\n\tcomputeFolder.add( params, 'resolution', 5, 75, 1 ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'scale', 0.1, 4 ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'solid' ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'insideOnly' ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'rebuild' );\n\n\tconst helpersFolder = gui.addFolder( 'helpers' );\n\thelpersFolder.add( params, 'displayMesh' );\n\thelpersFolder.add( params, 'displayBounds' );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\n// regenerate the mesh and bvh\nfunction* rebuildVoxels() {\n\n\tconst resolution = params.resolution;\n\tconst totalCount = resolution ** 3;\n\tconst dimensions = params.scale;\n\tconst step = dimensions / resolution;\n\tconst outsideColor = new THREE.Color( 0xffffff );\n\tconst insideColor = new THREE.Color( 0xFFC107 ).convertSRGBToLinear();\n\tif ( voxels && voxels.instanceMatrix.count !== totalCount ) {\n\n\t\tvoxels.material.dispose();\n\t\tvoxels.dispose();\n\t\tvoxels.parent.remove( voxels );\n\t\tvoxels = null;\n\n\t}\n\n\tconst { model, bvh } = models[ params.model ];\n\tif ( ! model ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( ! voxels ) {\n\n\t\t// set color here to force a color buffer to initialize\n\t\tvoxels = new THREE.InstancedMesh( new RoundedBoxGeometry( 1, 1, 1, 4, 0.1 ), new THREE.MeshStandardMaterial(), totalCount );\n\t\tvoxels.setColorAt( 0, outsideColor );\n\t\tscene.add( voxels );\n\n\t}\n\n\tconst minStart = ( - dimensions / 2.0 ) + step * 0.5;\n\tconst position = new THREE.Vector3();\n\tconst quaternion = new THREE.Quaternion();\n\tconst scale = new THREE.Vector3().setScalar( step );\n\tconst worldMatrix = new THREE.Matrix4();\n\tconst box = new THREE.Box3();\n\tconst invMat = new THREE.Matrix4().copy( model.matrixWorld ).invert();\n\n\tconst ray = new THREE.Ray();\n\tray.direction.set( 0, 0, 1 );\n\n\tlet voxelCount = 0;\n\n\tfor ( let y = 0; y < resolution; y ++ ) {\n\n\t\tfor ( let x = 0; x < resolution; x ++ ) {\n\n\t\t\tfor ( let z = 0; z < resolution; z ++ ) {\n\n\t\t\t\tposition.set(\n\t\t\t\t\tminStart + x * step,\n\t\t\t\t\tminStart + y * step,\n\t\t\t\t\tminStart + z * step,\n\t\t\t\t);\n\n\t\t\t\tbox.min.setScalar( - 0.5 * step ).add( position );\n\t\t\t\tbox.max.setScalar( 0.5 * step ).add( position );\n\n\t\t\t\tconst res = bvh.intersectsBox( box, invMat );\n\t\t\t\tif ( res ) {\n\n\t\t\t\t\tif ( ! params.insideOnly ) {\n\n\t\t\t\t\t\tworldMatrix.compose( position, quaternion, scale );\n\t\t\t\t\t\tvoxels.setMatrixAt( voxelCount, worldMatrix );\n\t\t\t\t\t\tvoxels.setColorAt( voxelCount, outsideColor );\n\t\t\t\t\t\tvoxels.instanceMatrix.needsUpdate = true;\n\t\t\t\t\t\tvoxels.instanceColor.needsUpdate = true;\n\n\t\t\t\t\t\tvoxelCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( params.solid ) {\n\n\t\t\t\t\t// transform into the local frame of the model\n\t\t\t\t\tray.origin.copy( position ).applyMatrix4( invMat );\n\n\t\t\t\t\t// If we hit a face backside we know we're inside the mesh. Alternatively we\n\t\t\t\t\t// could check if we jot an odd number of faces when checking all intersections.\n\t\t\t\t\tconst res = bvh.raycastFirst( ray, 2 );\n\t\t\t\t\tif ( res && res.face.normal.dot( ray.direction ) > 0.0 ) {\n\n\t\t\t\t\t\tworldMatrix.compose( position, quaternion, scale );\n\t\t\t\t\t\tvoxels.setMatrixAt( voxelCount, worldMatrix );\n\t\t\t\t\t\tvoxels.setColorAt( voxelCount, insideColor );\n\t\t\t\t\t\tvoxels.instanceMatrix.needsUpdate = true;\n\t\t\t\t\t\tvoxels.instanceColor.needsUpdate = true;\n\n\t\t\t\t\t\tvoxelCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvoxels.count = voxelCount;\n\t\t\t\tyield;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvoxels.count = voxelCount;\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tscene.updateMatrixWorld( true );\n\n\t// kick off a new voxelization task\n\tif ( needsUpdate ) {\n\n\t\tvoxelTask = rebuildVoxels();\n\t\tneedsUpdate = false;\n\n\t}\n\n\t// tick the task forward\n\tif ( voxelTask ) {\n\n\t\tlet startTime = window.performance.now();\n\t\twhile ( window.performance.now() - startTime < 16 ) {\n\n\t\t\tconst res = voxelTask.next();\n\t\t\tif ( res.done ) {\n\n\t\t\t\tvoxelTask = null;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif ( boxHelper ) {\n\n\t\tboxHelper.object.scale.setScalar( params.scale );\n\t\tboxHelper.object.updateMatrixWorld( true );\n\t\tboxHelper.update();\n\n\t}\n\n\t// hide the models\n\tfor ( const key in models ) {\n\n\t\tconst info = models[ key ];\n\t\tif ( info.model ) info.model.visible = false;\n\n\t}\n\n\t// show the select model\n\tconst { model } = models[ params.model ];\n\tif ( model ) {\n\n\t\tmodel.visible = params.displayMesh;\n\t\tboxHelper.visible = params.displayBounds;\n\n\t}\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$9732d42863df9bf1$var$renderer","$9732d42863df9bf1$var$camera","$9732d42863df9bf1$var$scene","$9732d42863df9bf1$var$gui","$9732d42863df9bf1$var$stats","$9732d42863df9bf1$var$outputContainer","$9732d42863df9bf1$var$voxels","$9732d42863df9bf1$var$controls","$9732d42863df9bf1$var$boxHelper","$9732d42863df9bf1$var$needsUpdate","$9732d42863df9bf1$var$voxelTask","$9732d42863df9bf1$var$params","model","scale","resolution","solid","displayMesh","displayBounds","insideOnly","rebuild","$9732d42863df9bf1$var$models","getElementById","$hGT0Q","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","Scene","light","DirectionalLight","position","set","add","revLight","ambient","AmbientLight","PerspectiveCamera","far","updateProjectionMatrix","$W2bOH","OrbitControls","$parcel$interopDefault","wireframeMaterial","MeshBasicMaterial","transparent","wireframe","depthWrite","opacity","$4EHgc","GLTFLoader","setMeshoptDecoder","$c0AwW","MeshoptDecoder","load","gltf","scene","geometry","center","material","setScalar","rotation","y","PI","$3C1cw","GenerateMeshBVHWorker","generate","then","bvh","Mesh","TorusKnotBufferGeometry","$aBPXg","MeshBVH","boxHelperMesh","BoxBufferGeometry","BoxHelper","$ghLil","GUI","Object","keys","onChange","computeFolder","addFolder","helpersFolder","aspect","$9732d42863df9bf1$var$init","$9732d42863df9bf1$var$render","requestAnimationFrame","updateMatrixWorld","totalCount","dimensions","step","outsideColor","Color","insideColor","convertSRGBToLinear","instanceMatrix","count","dispose","parent","remove","InstancedMesh","$c0yzz","RoundedBoxGeometry","MeshStandardMaterial","setColorAt","minStart","Vector3","quaternion","Quaternion","worldMatrix","Matrix4","box","Box3","invMat","copy","matrixWorld","invert","ray","Ray","direction","voxelCount","x","z","intersectsBox","compose","setMatrixAt","needsUpdate","instanceColor","origin","applyMatrix4","res","raycastFirst","face","normal","dot","$9732d42863df9bf1$var$rebuildVoxels","startTime","next","done","object","key","info","visible","render"],"version":3,"file":"voxelize.6fe8603a.js.map"}